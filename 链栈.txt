#include"stdio.h"
#define Stack_Size 50
typedef int StackElementType;
typedef struct
{
	StackElementType elem[Stack_Size];
	int top;
}SeqStack;
//初始化
void InitStack(SeqStack *S)
{
	S->top=-1;
}
// 进栈
int Push(SeqStack *S,StackElementType x)
{
	if(S->top==Stack_Size-1) return 0;
	S->top++;
	S->elem[S->top]=x;
	return 1;
}
//出栈
int Pop(SeqStack *S,StackElementType *x)
{
	if(S->top==-1)
		return 0;
	else
	{
		*x=S->elem[S->top];
		S->top--;
		return 1;
	}
}
// 读栈顶
int GetTop(SeqStack *S,StackElementType *x)
{
	if(S->top==-1)
		return 0;
	else
	{
		*x=S->elem[S->top];
		return 1;
	}
}

void main()
{
	int x,a;
	SeqStack S;
	InitStack(&S);
	printf("<<1.进栈   <<2.栈顶元素   <<3.出栈    <<0.退出\n");
	printf("<<");
	scanf("%d",&a);
	while(a!=0){
	switch(a)
	{
		case 1:	while(1)
			{
				printf("in put(0结束): ");
				scanf("%d",&x);
				if(x==0){printf("<<");
					break;}
				Push(&S,x);
			};break;
		case 2:	GetTop(&S,&x);
				printf("栈顶元素为%d\n",x);break;
		case 3:
			while(S.top!=-1)
			{Pop(&S,&x);
			printf("%d\n|\n",x);}break;
		default : printf("error");
	}scanf("%d",&a);}

	


}